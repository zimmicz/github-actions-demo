run-name: Release ${{ inputs.package_version }}
name: Release
on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Version you are about to release (e.g. 1.2.3)'
        required: true
        default: 'X.Y.Z'
      jira_fix_version:
        description: 'JIRA fix version for the release (e.g. 2022.Q4.2)'
        required: true
        default: 'YYYY.QX.Z'
env:
  PACKAGE_VERSION: ${{ github.event.inputs.package_version }}
  JIRA_FIX_VERSION: ${{ github.event.inputs.jira_fix_version }}
  RELEASE_BRANCH: release/v${{ github.event.inputs.package_version }}
jobs:
  release:
    name: Update changelog, package version and create release PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop
          # needed otherwise no merge base can be found
          fetch-depth: 0

      - name: Install repo
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Check user input
        shell: bash
        run: |
          # Check version
          if ! [[ ${{ env.PACKAGE_VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]];
            then
              echo "Unexpected package version format"
              exit 1
          fi

          # Check JIRA fix version
          if ! [[ ${{ env.JIRA_FIX_VERSION }} =~ ^[0-9]{4}\.Q[0-9]+\.[0-9]+ ]];
            then
              echo "Unexpected JIRA fix version format"
              exit 1
          fi

          # Check JIRA fix version hasn't been already released
          existing_jira_fix_version=$(awk '/${{ env.JIRA_FIX_VERSION}}/{print}' CHANGELOG.md)
          if [[ -n $existing_jira_fix_version ]];
            then
              echo "JIRA fix version already present in CHANGELOG.md"
              exit 1
          fi

          node ./.github/actions/semver-check.js ${{ env.PACKAGE_VERSION }}

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          # needed otherwise no merge base can be found
          fetch-depth: 0

      - name: Run Changelog CI
        uses: saadmk11/changelog-ci@v1.1.0
        with:
          release_version: ${{ env.PACKAGE_VERSION }}
          changelog_filename: "../changelog-ci-config.json"

      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop
          # needed otherwise no merge base can be found
          fetch-depth: 0

      - name: Update package version
        run: |
          find . -maxdepth 2 -type f -iname "package.json" -exec sed -i s/version.*/version\":\ \"\${{ env.PACKAGE_VERSION }}\",/g {} \;

      - name: Commit and push updated files
        run: |
          git checkout -b ${{ env.RELEASE_BRANCH }}
          git log --oneline
          git add CHANGELOG.md
          find . -maxdepth 2 -type f -iname "package.json" -exec git add {} \;
          git commit -m "chore: release ${{ env.PACKAGE_VERSION }}"
          git push --set-upstream origin ${{ env.RELEASE_BRANCH }}

      - name: Create release PR
        id: create_release_pr
        uses: devops-infra/action-pull-request@v0.5.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ env.RELEASE_BRANCH }}
          target_branch: main
          body: Deployment process to acc environment was triggered automatically. Do not merge this PR until regression testing is done on acc environment and it is safe to assume the build is stable.
          title: "[Release ${{ env.PACKAGE_VERSION }}] release branch -> main"
          label: do not merge
