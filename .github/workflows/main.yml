name: Release to ACC
on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Version you are about to release (e.g. v1.2.3)'
        required: true
        default: 'vX.Y.Z'
      jira_fix_version:
        description: 'JIRA fix version for the release (e.g. 2022.Q4.2)'
        required: true
        default: 'YYYY.QX.Z'
env:
  PACKAGE_VERSION: ${{ github.event.inputs.package_version }}
  JIRA_FIX_VERSION: ${{ github.event.inputs.jira_fix_version }}
run-name: Release to ACC
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check user input
        shell: bash
        run: |
          # Check version
          if ! [[ ${{ env.PACKAGE_VERSION }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]];
            then
              echo "Unexpected package version format"
              exit 1
          fi

          # Check JIRA fix version
          if ! [[ ${{ env.JIRA_FIX_VERSION }} =~ ^[0-9]{4}\.Q[0-9]+\.[0-9]+ ]];
            then
              echo "Unexpected JIRA fix version format"
              exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Create release branch
        run: |
          git checkout develop
          # might be a good idea to use a different name for the first run to check without triggering acc release
          git checkout -b release/${{ env.PACKAGE_VERSION }}
          git branch --set-upstream-to=origin/release/${{ env.PACKAGE_VERSION }} release/${{ env.PACKAGE_VERSION }}

      - name: Update changelog
        run: |
          cat <<END >> CHANGELOG.md
          ${{ env.PACKAGE_VERSION }} ($(date +%Y-%m-%d))
          ---
          JIRA fix version: ${{ env.JIRA_FIX_VERSION }}
          END
          git add CHANGELOG.md

      - name: Update package version
        run: |
          find . -maxdepth 2 -type f -iname "package.json" -exec sed -i s/version.*/version:\"\ ${{ env.PACKAGE_VERSION }}\",/g {} \;
          find . -maxdepth 2 -type f -iname "package.json" -exec git add {} \;

      - name: Commit updated files
        run: |
          git commit -m "chore: release ${{ env.PACKAGE_VERSION }}"
          git pull
          git push --set-upstream origin release/${{ env.PACKAGE_VERSION }}

      - name: Create PR for production release
        uses: peter-evans/create-pull-request@v4
        with:
          branch: release/${{ env.PACKAGE_VERSION }}
          base: main
          labels: |
            do not merge

